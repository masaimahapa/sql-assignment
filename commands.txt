CREATE DATABASE Umuzi

CREATE TABLE Customers(
CustomerID SERIAL UNIQUE,
FirstName VARCHAR(50),
LastName VARCHAR(50),
Gender VARCHAR,
Address VARCHAR(200),
Phone INT UNIQUE,
Email VARCHAR(100) UNIQUE,
City VARCHAR(20),
Country VARCHAR(50),
PRIMARY KEY (CustomerID)
)

CREATE TABLE Employees(
EmployeeID SERIAL UNIQUE,
FirstName VARCHAR(50),
LastName VARCHAR(50),
Email VARCHAR(100) UNIQUE,
JobTitle VARCHAR(20),
PRIMARY KEY (EmployeeID)
)

CREATE TABLE Orders(
OrderID SERIAL UNIQUE,
ProductID INT REFERENCES Products(ProductID),
FulfilledByEmployeeID INT REFERENCES Employees(EmployeeID),
PaymentID INT REFERENCES Payments(PaymentID),
DateRequired date,
DateShipped date,
Status VARCHAR(20),

PRIMARY KEY (OrderID, ProductID, FulfilledByEmployeeID, PaymentID)
)


CREATE TABLE Payments(
CustomerID INT REFERENCES Customer(CustomerID),
PaymentID Serial UNIQUE,
PaymentDate date,
Amount decimal,

PRIMARY KEY (PaymentID)
)

CREATE TABLE Products(
ProductID Serial UNIQUE,
ProductName VARCHAR(100),
Description VARCHAR(300),
BuyPrice DECIMAL,

PRIMARY KEY (ProductID)
)

--------------------------------------------------------------

INSERT INTO Customers (FirstName, LastName, Gender, Address, Phone, Email, City, Country) VALUES 
('John', 'Hilbert', 'Male', '284 chaucer st', 084789657, 'john@gmail.com', 'Johannesburg', 'South Africa'),
('Thando', 'Sithole', 'Female', '240 Sect 1', 0794445584, 'thando@gmail.com', 'Cape Town', 'South Africa'),
('Leon', 'Glen', 'Male', '81 Everton Rd', 'Gillits', 0820832830, 'Leon@gmail.com', 'Durban', 'South Africa'),
('Charl	Muller', 'Male', '290A Dorset Ecke', +44856872553, 'Charl.muller@yahoo.com', 'Berlin', 'Germany'),
('Julia	Stein', 'Female', '2 Wernerring', +448672445058, 'Js234@yahoo.com', 'Frankfurt', 'Germany');

INSERT INTO EMPLOYEES(FirstName, LastName, Email, JobTitle) VALUES
('Kani', 'Matthew', 'mat@gmail.com', 'Manager'),
('Lesly', 'Cronje', 'LesC@gmail.com', 'Clerk'),
('Gideon', 'Maduku', 'm@gmail.com', 'Accountant');


INSERT INTO Orders (OrderID, ProductID, PaymentID, FulfilledByEmployeeID, DateRequired, DateShipped, Status) VALUES
(DEFAULT, 1, 1, 2, '05-09-2018', NULL, 'Not shipped'),
(DEFAULT,1,2, 2, '04-09-2018', '03-09-2018', 'Shipped'),
(DEFAULT, 3, 3, 3,'06-09-2018', NULL, 'Not shipped');

INSERT INTO PAYMENTS (
CustomerID, PaymentID, PaymentDate, Amount) VALUES
( SELECT CustomerID FROM Customers, DEFAULT, '01-09-2018', 150.75),
( SELECT CustomerID FROM Customers, DEFAULT, '03-09-2018', 150.75),
( SELECT CustomerID FROM Customers, DEFAULT, '03-09-2018', 700.60);


INSERT INTO Products (ProductName, Description, BuyPrice) VALUES
('Harley Davidson Chopper', 'This replica features working kickstand, front suspension, gear-shift lever', 150.75),
('Classic Car',  'Turnable front wheels, steering function', 550.75),
('Sports car', 'Turnable front wheels, steering function', 700.60);


------------------------------------------------------------------------------------------

PART 2

1.
SELECT * FROM Customers


2.
SELECT FirstName FROM Customers;

3. 
SELECT FirstName from Customers WHERE CustomerID=1;

4. 
UPDATE Customers SET FirstName='Lerato', LastName='Lebitso' WHERE CustomerID=1;

5.
DELETE FROM Customers WHERE CustomerID=2;

6.

SELECT Status, COUNT (Status)
FROM
   Orders
GROUP BY Status;

7. 
SELECT MAX(Amount)
FROM Payments;

8.
SELECT * FROM Customers ORDER BY Country;

9.
SELECT * FROM Products WHERE BuyPrice BETWEEN 100 AND 600;

10.
SELECT * FROM Customers WHERE Country= 'Germany' AND City='Berlin';

11. 
SELECT * FROM Customers WHERE City IN ('Cape Town', 'Durban');

12.
SELECT * FROM Products WHERE BuyPrice>500;

13. 
SELECT SUM(Amount) FROM Payments;

14.
SELECT COUNT(*) FROM Orders WHERE Status='Shipped';

15.
SELECT AVG(BuyPrice) AS Rands, AVG(BuyPrice)/12 AS Dollars FROM Products;


16.
SELECT * FROM Payments INNER JOIN Customers ON Customers.CustomerID= Payments.CustomerID

17.
SELECT * FROM Products WHERE Description LIKE '%Turnable front wheels%';

